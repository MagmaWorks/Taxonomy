using MagmaWorks.Taxonomy.Profiles;
using MagmaWorks.Taxonomy.Profiles.Utilities;
using MagmaWorks.Taxonomy.Serialization.Profiles.Extensions;
using OasysUnits;
using OasysUnits.Units;
using ProfileTests.Utility;

namespace ProfileTests
{
    public class CircleTests
    {
        [Fact]
        public void CreateProfileTest()
        {
            // Assemble
            var dia = new Length(2.3, LengthUnit.Centimeter);

            // Act
            ICircle prfl = new Circle(dia);

            // Assert
            TestUtility.TestLengthsAreEqual(dia, prfl.Diameter);
        }

        [Fact]
        public void InterfaceSurvivesRoundtripDeserializationTest()
        {
            // Assemble
            var dia = new Length(2.3, LengthUnit.Centimeter);

            // Act
            ICircle prfl = new Circle(dia);
            string json = prfl.ToJson();
            ICircle prflDeserialized = json.FromJson<ICircle>();

            // Assert
            TestUtility.TestLengthsAreEqual(prfl.Diameter, prflDeserialized.Diameter);
        }

        [Fact]
        public void ConcreteImplementationSurvivesRoundtripDeserializationTest()
        {
            // Assemble
            var dia = new Length(2.3, LengthUnit.Centimeter);

            // Act
            ICircle prfl = new Circle(dia);
            string json = prfl.ToJson();
            ICircle prflDeserialized = json.FromJson<Circle>();

            // Assert
            TestUtility.TestLengthsAreEqual(prfl.Diameter, prflDeserialized.Diameter);
        }

        [Fact]
        public void GetPerimeterTest()
        {
            // Assemble
            var dia = new Length(30.0, LengthUnit.Centimeter);

            // Act
            ICircle prfl = new Circle(dia);
            IPerimeter perimeter = prfl.GetPerimeter();

            // Assert
            Assert.Equal(95, perimeter.OuterEdge.Points.Count);
            List<double> u = perimeter.OuterEdge.Points.Select(x => x.U.Millimeters).ToList();
            List<double> v = perimeter.OuterEdge.Points.Select(x => x.V.Millimeters).ToList();

            var expectedU = new List<double>()
            {
                150,
149.665031793473,
148.66162322321702,
146.994255755488,
144.6703762581565,
141.70036374118783,
138.09748300146433,
133.87782537898218,
129.0602368890209,
123.66623405126404,
117.71990779179913,
111.24781584719364,
104.27886415119634,
96.84417773382036,
88.97696170940331,
80.7123529745059,
72.08726327800257,
63.140214364250255,
53.91116592562692,
44.441337132845085,
34.77302254012923,
24.949403187469525,
15.014353743614766,
5.012246551151197,
-5.012246551151178,
-15.01435374361475,
-24.949403187469503,
-34.77302254012925,
-44.44133713284508,
-53.911165925626904,
-63.14021436425024,
-72.08726327800257,
-80.71235297450588,
-88.97696170940328,
-96.84417773382036,
-104.27886415119634,
-111.24781584719364,
-117.71990779179916,
-123.66623405126406,
-129.0602368890209,
-133.87782537898218,
-138.0974830014643,
-141.7003637411878,
-144.6703762581565,
-146.994255755488,
-148.66162322321702,
-149.665031793473,
-150,
-149.665031793473,
-148.66162322321702,
-146.994255755488,
-144.6703762581565,
-141.70036374118783,
-138.09748300146433,
-133.87782537898218,
-129.06023688902087,
-123.66623405126407,
-117.71990779179916,
-111.24781584719365,
-104.27886415119636,
-96.84417773382037,
-88.97696170940326,
-80.71235297450592,
-72.08726327800252,
-63.14021436425027,
-53.911165925627,
-44.441337132845106,
-34.77302254012932,
-24.949403187469507,
-15.014353743614818,
-5.012246551151182,
5.012246551151127,
15.014353743614762,
24.949403187469454,
34.773022540129254,
44.44133713284506,
53.91116592562695,
63.14021436425021,
72.08726327800261,
80.71235297450588,
88.97696170940331,
96.84417773382035,
104.27886415119629,
111.24781584719362,
117.7199077917991,
123.66623405126404,
129.06023688902087,
133.87782537898218,
138.0974830014643,
141.70036374118783,
144.6703762581565,
146.994255755488,
148.66162322321702,
149.665031793473,
150
            };

            var expectedV = new List<double>() {
                0,
10.018895061768234,
19.993043306066824,
29.877897765575412,
39.6293102806929,
49.20372867593537,
58.558391274524226,
67.65151788241528,
76.4424963887876,
84.89206414958929,
92.96248334403676,
100.61770952088352,
107.8235525816894,
114.54782948209981,
120.76050796913442,
126.43384071251955,
131.54248923100073,
136.0636370601511,
139.97709165624036,
143.26537458103687,
145.91379956475558,
147.9105380985043,
149.24667226327563,
149.9162345595382,
149.9162345595382,
149.24667226327563,
147.9105380985043,
145.91379956475558,
143.26537458103687,
139.9770916562404,
136.0636370601511,
131.54248923100073,
126.43384071251955,
120.76050796913444,
114.54782948209981,
107.82355258168941,
100.61770952088352,
92.96248334403673,
84.89206414958927,
76.4424963887876,
67.65151788241526,
58.558391274524254,
49.20372867593541,
39.62931028069293,
29.877897765575444,
19.993043306066856,
10.018895061768255,
1.83697019872103E-14,
-10.01889506176822,
-19.993043306066816,
-29.87789776557541,
-39.6293102806929,
-49.203728675935366,
-58.55839127452423,
-67.65151788241529,
-76.44249638878762,
-84.89206414958923,
-92.9624833440367,
-100.61770952088348,
-107.82355258168938,
-114.54782948209977,
-120.76050796913445,
-126.43384071251955,
-131.54248923100073,
-136.0636370601511,
-139.97709165624036,
-143.26537458103687,
-145.91379956475555,
-147.9105380985043,
-149.24667226327563,
-149.9162345595382,
-149.9162345595382,
-149.24667226327563,
-147.9105380985043,
-145.91379956475558,
-143.2653745810369,
-139.97709165624036,
-136.0636370601511,
-131.5424892310007,
-126.43384071251955,
-120.76050796913441,
-114.54782948209981,
-107.82355258168946,
-100.61770952088352,
-92.9624833440368,
-84.89206414958929,
-76.44249638878767,
-67.65151788241528,
-58.558391274524276,
-49.20372867593535,
-39.62931028069295,
-29.877897765575398,
-19.993043306066866,
-10.018895061768207,
-3.67394039744206E-14,
};

            TestUtility.TestListsOfDoublesAreEqual(expectedU, u);
            TestUtility.TestListsOfDoublesAreEqual(expectedV, v);
        }
    }
}
