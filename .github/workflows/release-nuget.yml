name: On Release -- Push NuGet

on:
  release:
    types: [published]

jobs:
  build_test_package:
    name: Tag version, build, test, re-package, update release and push nuget
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        filter: tree:0
        
    - name: Strip Build from Tag version
      id: get_version
      run: |
        # Get the tag from GitHub event
        tag=${{ github.event.release.tag_name }}
        echo $tag

        # Convert tag to string
        tagString=$(echo $tag)

        # Split the tag into major, minor, patch, and build versions
        IFS='.' read -r -a fullVersion <<< "$tagString"
        majorVersion=${fullVersion[0]}
        minorVersion=${fullVersion[1]}
        patchVersion=${fullVersion[2]}
        buildVersion=${fullVersion[3]}

        # Create version tag with major, minor, and patch versions
        versionTag="$majorVersion.$minorVersion.$patchVersion"

        # Output version tag to GitHub output and console
        echo "VERSION=$versionTag" >> $GITHUB_OUTPUT
        echo "Version: $versionTag"

        # Create and push new Major.Minor.Patch git tag
        git tag ${{ steps.get_version.outputs.VERSION }}
        git push --tags

    - name: Build
      run: dotnet build --configuration Release
    
    - name: Test
      run: dotnet test --configuration Release --no-build
    
    - name: Package
      run: dotnet pack --configuration Release --no-restore -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg /p:DebugType=portable /property:Configuration=Debug

    - name: Update release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./**/*.*nupkg"
        tag: ${{ github.event.release.tag_name }}
        draft: false
        allowUpdates: true
        removeArtifacts: true
        updateOnlyUnreleased: false

#    - name: Push nupkg file to nuget.org
#      run: dotnet nuget push "*.nupkg" --api-key ${{ SECRETS.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
