name: On Release -- Push NuGet

on:
  release:
    types: [published]

jobs:
  pushNuGetPackage:
    runs-on: ubuntu-latest
    steps:
      - name: Download NuGet Package
        uses: i3h/download-release-asset@v1
        with:
          owner: ${{ github.repository_owner }}
          repo: Taxonomy
          tag: ${{ github.event.release.tag_name }}
          file: /.*\.nupkg/
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Symbols
        uses: i3h/download-release-asset@v1
        with:
          owner: ${{ github.repository_owner }}
          repo: Taxonomy
          tag: ${{ github.event.release.tag_name }}
          file: /.*\.snupkg/
          token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Push nupkg file to nuget.org
#        run: dotnet nuget push "*.nupkg" --api-key ${{ SECRETS.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Get version from Package name
        id: get_version
        shell: pwsh
        run: |
          $fullVersion = [array]$($(Get-ChildItem -recurse -Filter *.nupkg | Select-Object -First 1).Name -split '(?=\d)',2)[1].replace('.nupkg','').split('.')
          $majorVersion = [string]$fullVersion[0]
          $minorVersion = [string]$fullVersion[1]
          $patchVersion = [string]$fullVersion[2]
          $dotSeparatedTag = $majorVersion + "." + $minorVersion + "." + $patchVersion
          echo "VERSION=$dotSeparatedTag" >> $env:GITHUB_ENV
      
      - name: Create new version tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ env.VERSION }}
          message: '${{ steps.bump-semver.outputs.new_version }}: Release #${{ github.event.release.tag_name }}'

      - name: Delete previous draft releases
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
