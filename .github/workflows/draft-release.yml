name: On Merge to Main -- Package and create/update draft release

on:
  push:
    branches:
    - main
    
jobs:
  build_test_package:
    name: Build, test, package and create release
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        filter: tree:0
    
    - name: Build
      run: dotnet build --configuration Release
    
    - name: Test
      run: dotnet test --configuration Release --no-build
    
    - name: Package
      run: dotnet pack --configuration Release --no-restore -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg /p:DebugType=portable /property:Configuration=Debug

    - name: Get version from Package name
      id: get_version
      run: |
        # Get the full version from the first .nupkg file found recursively, remove 'preview'
        fullVersion=$(ls -r **/*.nupkg | head -n 1 | cut -d '.' -f 2 | sed 's/.nupkg//;s/-preview//;s/\./ /g')

        # Split the tag into major, minor, patch, and build versions
        majorVersion=$(echo $fullVersion | cut -d ' ' -f 1)
        minorVersion=$(echo $fullVersion | cut -d ' ' -f 2)
        patchVersion=$(echo $fullVersion | cut -d ' ' -f 3)
        buildVersion=$(echo $fullVersion | cut -d ' ' -f 4)

        # Concatenate version components
        versionBuildTag="$majorVersion.$minorVersion.$patchVersion.$buildVersion"

        # Write version to output file and display it
        echo "BUILD=$versionBuildTag" >> $GITHUB_OUTPUT
        echo "Build version: $versionBuildTag"
      
    - name: Create new draft release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./**/*.*nupkg"
        tag: "${{ steps.get_version.outputs.BUILD }}"
        draft: true
        allowUpdates: true
        updateOnlyUnreleased: true
