using System.Text;

namespace CountryGenerator
{
    public class Program
    {
        private static string _namespace = "MagmaWorks.Taxonomy.Countries";
        private static string _indt = "    ";
        public static void Main()
        {
            // Relative path to data
            string path = "../../../CountriesData.csv";
            // read data, skip header row
            List<CsvValues> values = File.ReadAllLines(path).Skip(1)
                                     .Select(v => CsvValues.FromCsv(v))
                                     .ToList();

            var directory = Directory.GetParent(path).Parent;
            path = Path.Combine(directory.FullName, "Countries", "AutoGenerated");
            Directory.CreateDirectory(path);

            StringBuilder enums = new StringBuilder();
            enums.AppendLine($@"namespace {_namespace}
{{
    public enum Country
    {{");
            StringBuilder utility = new StringBuilder();
            utility.AppendLine($@"namespace {_namespace}
{{
    public class Utility
    {{
        public static ICountry GetCountry(Country country)
        {{
            return country switch
            {{");

            foreach (CsvValues v in values)
            {
                ClassWriter.WriteClass(v, path, _namespace);
                string className = ClassWriter.ToPascalCase(v.Name);
                enums.AppendLine($"{_indt}{_indt}{className},");
                utility.AppendLine($"{_indt}{_indt}{_indt}{_indt}Country.{className} => new {className}(),");
            }

            enums.AppendLine($"    }}\r\n}}");
            utility.AppendLine($@"                _ => throw new System.NotImplementedException(),
            }};
        }}
    }}
}}");

            path = Path.Combine(directory.FullName, "Countries");
            var file = new StreamWriter($"{path}/Country.cs");
            file.Write(enums);
            file.Close();
            file = new StreamWriter($"{path}/Utility.cs");
            file.Write(utility);
            file.Close();
        }
    }
}
